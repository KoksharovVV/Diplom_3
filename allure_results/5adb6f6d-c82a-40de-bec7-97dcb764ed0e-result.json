{"name": "Проверка отображения заказов из истории заказов в ленте заказов", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = check_orders_in_order_feed(['#0107479', '#0108917', '#0109027', '#0109028', '#0109029', '#0109030', ...], ['#0110849', '#0110848', '#0110847', '#0110846', '#0110845', '#0110844', ...])\n +    where check_orders_in_order_feed = <pages.order_feed_page.OrderFeedPage object at 0x7c1bd8551af0>.check_orders_in_order_feed", "trace": "self = <tests.test_order_feed_page.TestOrderFeedPage object at 0x7c1bd849b590>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d09370312d974d78abad7cc016df68d1\")>, personal_account = None\n\n    @allure.title('Проверка отображения заказов из истории заказов в ленте заказов')\n    def test_contains_order_history_in_orders_feed(self, driver, personal_account):\n        page = PersonalCabinetPage(driver)\n        page.open_history_orders()\n        orders_history = page.get_id_orders_from_history()\n        order_feed_page = OrderFeedPage(driver)\n        order_feed_page.open_page(TestDataUrl.ORDER_FEED_URL)\n        orders_feed = order_feed_page.get_orders_from_orders_feed()\n>       assert order_feed_page.check_orders_in_order_feed(orders_history, orders_feed)\nE       AssertionError: assert False\nE        +  where False = check_orders_in_order_feed(['#0107479', '#0108917', '#0109027', '#0109028', '#0109029', '#0109030', ...], ['#0110849', '#0110848', '#0110847', '#0110846', '#0110845', '#0110844', ...])\nE        +    where check_orders_in_order_feed = <pages.order_feed_page.OrderFeedPage object at 0x7c1bd8551af0>.check_orders_in_order_feed\n\ntests/test_order_feed_page.py:54: AssertionError"}, "steps": [{"name": "Открыть историю заказов", "status": "passed", "start": 1724267123781, "stop": 1724267124314}, {"name": "Получить id заказов из истории", "status": "passed", "start": 1724267124314, "stop": 1724267125750}, {"name": "Получить id заказов в ленте заказов", "status": "passed", "start": 1724267125892, "stop": 1724267126575}, {"name": "Проверить, что все заказы из истории заказов отображаются в ленте заказов", "status": "passed", "parameters": [{"name": "list1", "value": "['#0107479', '#0108917', '#0109027', '#0109028', '#0109029', '#0109030', '#0109031', '#0109032', '#0109033', '#0109034', '#0109129', '#0109175', '#0109367', '#0109370', '#0109371', '#0109389', '#0109391', '#0109395', '#0109396', '#0109406', '#0109409', '#0109410', '#0109411', '#0109412', '#0109413', '#0109414', '#0109417', '#0109421', '#0109423', '#0109424', '#0109425', '#0109429', '#0109430', '#0109432', '#0109433', '#0109434', '#0109436', '#0109439', '#0109440', '#0109484', '#0109486', '#0109487', '#0109542', '#0109543', '#0109544', '#0109545', '#0109548', '#0109549', '#0109550', '#0109551', '#0109552', '#0109554', '#0109555', '#0109557', '#0109558', '#0109560', '#0109561', '#0109562', '#0109566', '#0109568', '#0109569', '#0109570', '#0109572', '#0109574', '#0109576', '#0109577', '#0109578', '#0109579', '#0109580', '#0109581', '#0109582', '#0109583', '#0109584', '#0109585', '#0109586', '#0109587', '#0109588', '#0109595', '#0109598', '#0109600', '#0109638', '#0109640', '#0109641', '#0110761', '#0110762', '#0110763', '#0110764', '#0110765', '#0110773', '#0110774', '#0110775', '#0110788', '#0110789', '#0110790', '#0110791', '#0110792', '#0110793', '#0110794', '#0110795', '#0110796', '#0110797', '#0110798', '#0110800', '#0110801', '#0110802', '#0110803', '#0110804', '#0110805', '#0110806', '#0110807', '#0110808', '#0110809', '#0110810', '#0110811', '#0110812', '#0110813', '#0110814', '#0110815', '#0110819', '#0110820', '#0110821', '#0110822', '#0110838', '#0110839', '#0110840', '#0110845', '#0110846', '#0110847', '#0110848']"}, {"name": "list2", "value": "['#0110849', '#0110848', '#0110847', '#0110846', '#0110845', '#0110844', '#0110843', '#0110842', '#0110841', '#0110840', '#0110839', '#0110838', '#0110837', '#0110836', '#0110835', '#0110834', '#0110833', '#0110832', '#0110831', '#0110830', '#0110829', '#0110828', '#0110827', '#0110826', '#0110825', '#0110824', '#0110823', '#0110822', '#0110821', '#0110820', '#0110819', '#0110818', '#0110817', '#0110816', '#0110815', '#0110814', '#0110813', '#0110812', '#0110811', '#0110810', '#0110809', '#0110808', '#0110807', '#0110806', '#0110805', '#0110804', '#0110803', '#0110802', '#0110801', '#0110800']"}], "start": 1724267126575, "stop": 1724267126575}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1724267123781, "stop": 1724267126575, "uuid": "9a240c39-e132-4489-b395-6acf299b694c", "historyId": "ce17b9393d3d294b1de94a0df75bcfb9", "testCaseId": "5c4187beaf4c38c1bd3bf488ad6036b0", "fullName": "tests.test_order_feed_page.TestOrderFeedPage#test_contains_order_history_in_orders_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed_page"}, {"name": "subSuite", "value": "TestOrderFeedPage"}, {"name": "host", "value": "toster-Katana-17-B12UCR"}, {"name": "thread", "value": "31390-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed_page"}]}